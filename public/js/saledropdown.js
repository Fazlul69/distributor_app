/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/saledropdown.js":
/*!**************************************!*\
  !*** ./resources/js/saledropdown.js ***!
  \**************************************/
/***/ (() => {

eval("$(document).ready(function () {\n  $(document).on('change', '.productVendor', function () {\n    var vendor_id = $(this).val();\n    var div = $(this).parent().parent();\n    var op = \" \";\n    $.ajax({\n      type: 'get',\n      url: '/findCategory',\n      data: {\n        'id': vendor_id\n      },\n      success: function success(data) {\n        op += '<option value=\"0\" selected disabled>Choose Category</option>';\n\n        for (var i = 0; i < data.length; i++) {\n          op += '<option value=\"' + data[i].id + '\">' + data[i].category_name + '</option>';\n        }\n\n        div.find('.productCategory').html(\" \");\n        div.find('.productCategory').append(op);\n      }\n    });\n  });\n  $(document).on('change', '.productCategory', function () {\n    var cat_id = $(this).val();\n    var div = $(this).parent().parent();\n    var op = \" \";\n    $.ajax({\n      type: 'get',\n      url: '/findProduct',\n      data: {\n        'id': cat_id\n      },\n      success: function success(data) {\n        console.log(\"ddd: \" + data);\n        op += '<option value=\"0\" selected disabled>Choose Item</option>';\n\n        for (var i = 0; i < data.length; i++) {\n          op += '<option value=\"' + data[i].id + '\">' + data[i].product_name + '</option>';\n        }\n\n        div.find('.productName').html(\" \");\n        div.find('.productName').append(op);\n      }\n    });\n  }); ///////\n\n  $(document).on('change', '.productName', function (e) {\n    e.preventDefault();\n    var pro_id = $(this).val();\n    var a = $(this).parent().parent();\n    $.ajax({\n      type: 'get',\n      url: '/purchaseProduct',\n      data: {\n        'id': pro_id\n      },\n      dataType: 'json',\n      success: function success(data) {\n        a.find('.purchase_quality').val(data.quantity);\n      }\n    });\n  }); // data from sale table check stock\n\n  $(document).on('change', '.productName', function (e) {\n    e.preventDefault();\n    var pro_id = $(this).val();\n    var a = $(this).parent().parent();\n    $.ajax({\n      type: 'get',\n      url: '/saleProduct',\n      data: {\n        'id': pro_id\n      },\n      dataType: 'json',\n      success: function success(data) {\n        a.find('.sales_quality').val(data); //stock\n\n        var pur_pro = a.find('.purchase_quality').val();\n        console.log(\"p quantity: \" + pur_pro);\n        var tot = parseInt(pur_pro) - parseInt(data);\n        a.find('.p_stock').val(tot);\n      }\n    });\n  }); // ///\n\n  $(document).on('change', '.productName', function () {\n    var pro_id = $(this).val();\n    var a = $(this).parent().parent();\n    $.ajax({\n      type: 'get',\n      url: '/sellPrice',\n      data: {\n        'id': pro_id\n      },\n      dataType: 'json',\n      success: function success(data) {\n        a.find('.p_price').val(data.tp);\n      }\n    });\n  }); // Stock start\n  // Stock end\n  // for view \n\n  $(document).on('change', '.customerSelectFromSale', function () {\n    var cus_id = $(this).val();\n    console.log(\"a :\" + cus_id);\n    var div = $(this).parent().parent();\n    var op = \" \";\n    $.ajax({\n      type: 'get',\n      url: '/findCustomerInView',\n      data: {\n        'id': cus_id\n      },\n      success: function success(data) {\n        op += '<option value=\"0\" selected disabled>Choose Invoice</option>';\n\n        for (var i = 0; i < data.length; i++) {\n          op += '<option value=\"' + data[i].invoice + '\">' + data[i].invoice + '</option>';\n        }\n\n        div.find('.saleInvoice').html(\" \");\n        div.find('.saleInvoice').append(op);\n      }\n    });\n  });\n  $(document).on('change', '.saleInvoice', function () {\n    var invoice_id = $(this).val();\n    console.log(\"b :\" + invoice_id);\n    var div = $(this).parent().parent();\n    var op = \" \";\n    $.ajax({\n      type: 'get',\n      url: '/findVendorFromSale',\n      data: {\n        'id': invoice_id\n      },\n      success: function success(data) {\n        console.log(\"gg:\" + data);\n        op += '<option value=\"0\" selected disabled>Choose Vendor</option>';\n\n        for (var i = 0; i < data.length; i++) {\n          op += '<option value=\"' + data[i].vendor_id + '\">' + data[i].name + '</option>';\n        }\n\n        div.find('.saleVendor').html(\" \");\n        div.find('.saleVendor').append(op);\n      }\n    });\n  });\n  $(document).on('change', '.saleVendor', function () {\n    var vendor_id = $(this).val();\n    console.log(\"c :\" + vendor_id);\n    var a = $(this).parent().parent();\n    $.ajax({\n      type: 'get',\n      url: '/findSaleDue',\n      data: {\n        'id': vendor_id\n      },\n      success: function success(data) {\n        console.log(\"dd :\" + data);\n        a.find('.saleDue').val(data.due);\n      }\n    });\n  }); // add in history\n\n  var alldue = [];\n  $(document).on('click', '.addHistory', function () {\n    var vendor = $('.saleVendor option:selected').text();\n    var invoice = $('.saleInvoice').val();\n    var due = $('.saleDue').val();\n    $('.queryTable tbody').append('<tr><td>' + vendor + '</td><td>' + invoice + '</td><td class=\"his_due\">' + due + '</td></tr>');\n    alldue.push($('.saleDue').val());\n    var sum = 0.00;\n    $.each(alldue, function () {\n      sum += parseFloat(this) || 0;\n    });\n    $(\".dShyt\").append('<p class=\"totaldueinsale\">' + 'Total Due: ' + sum + '</p>');\n    $(\".totaldueinsale\").empty();\n    $(\".dShyt\").append('<p class=\"totaldueinsale\">' + 'Total Due: ' + sum + '</p>');\n    console.log(sum);\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/saledropdown.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/saledropdown.js"]();
/******/ 	
/******/ })()
;